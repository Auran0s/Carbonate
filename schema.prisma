datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  active Boolean @default(false)

  email    String @unique
  username String @unique

  avatar String

  plan        Plan?
  active_plan Boolean @default(false)

  optinNl Boolean   @default(false)
  optinAt DateTime?

  customer Customer?

  restrictions Restrictions[]

  collections Collections[] @relation("UserCollections")
}

enum Plan {
  SOLO
  BUSINESS
  CUSTOM
}

model Customer {
  id String @id @default(uuid())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique

  client_reference_id String @unique @default(uuid())

  end_date String?
  interval String?

  stripe_customer_id     String?
  stripe_subscription_id String?
}

model Restrictions {
  id String @id @default(uuid())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  function String

  uses_number Int
}

model Collections {
  id String @id @default(uuid())

  name String

  users User[] @relation("UserCollections")

  Medias Medias[]
}

model Medias {
  id String @id @default(uuid())

  name String

  mediaType   String
  mediaFormat String

  url String?

  metadata String[]

  collections    Collections @relation(fields: [collections_id], references: [id])
  collections_id String
}
